// first appoach

class Solution {
    public int minFlipsMonoIncr(String s) {
        int i = 0;
        int flip = 0;
        int one = 0;
        while(i < s.length() && s.charAt(i) == '0'){
            i++;
        }   

        for(; i<s.length(); i++){
            char ch = s.charAt(i);
            if(ch == '1'){
                one++;
            }else{
                flip++;
            }
            if(flip > one){
                flip = one;
            }
        }
        return flip;
    }
}

// class Solution {
//     public int minFlipsMonoIncr(String s) {
//         int zto = 0;
//         int otz = 0;
//         int i=0;
//         while(i<s.length() && s.charAt(i) == '0'){
//             i++;
//         }
//         for(; i<s.length(); i++){
//             char ch = s.charAt(i);
//             if(ch == '0'){
//                 zto++;
//             }else if(ch == '1'){
//                 otz++;
//             }
//             if(zto >= otz){
//                 zto = otz;
//             }
//         }
//         return zto;
//     }
// }

// in c++ 

// vector<vector<int>>dp;
    
//     int solve(string&s, int i, bool flag)
//     {
//         if(i >= s.size())
//             return 0;
        
//         if(dp[i][int(flag)] != -1)
//             return dp[i][int(flag)];
        
//         if(s[i] == '0' and flag)
//         {
//             return dp[i][int(flag)] = 1 + solve(s, i + 1, true);
//         }
//          if(s[i] == '0')
//             return dp[i][int(flag)] = min(solve(s, i + 1, false), 1 + solve(s, i + 1, true));
//         if(s[i] == '1' and !flag)
//         {
//             return dp[i][int(flag)] = min(solve(s, i + 1, true), 1 + solve(s, i + 1, false));
//         }
//         return dp[i][int(flag)] = solve(s, i + 1, true);
//     }
    
//     int minFlipsMonoIncr(string s) 
//     {
//         dp.resize(s.size() + 1, vector<int>(2, -1));
//         return solve(s, 0, false);
//     }


// another approach

class Solution {
    public int minFlipsMonoIncr(String s) {
        int flip = 0; 
        int one = 0;
        for(int i=0; i<s.length(); i++){
            char ch = s.charAt(i);
            if(ch == '1'){
                one++;
            }else{
                if(one == 0){
                    continue;
                }else{
                    flip++;
                }
            }
            if(flip > one){
                flip = one;
            }
        }
        return flip;
    }
}