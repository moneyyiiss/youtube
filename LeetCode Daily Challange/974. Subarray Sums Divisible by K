//using hashmap - first approach
class Solution {
    public int subarraysDivByK(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<>();
        int sum = 0;
        int c = 0;
        int rem = 0;
        map.put(0, 1);
        for(int i=0; i<nums.length; i++){
            sum+=nums[i];
            rem = (sum%k + k)%k;
            if(map.containsKey(rem)){
                c+=map.get(rem);
                map.put(rem, map.get(rem)+1);
            }else{
                map.put(rem, 1);
            }
            
        }  
        return c; 
    }
}

// using array
class Solution {
    public int subarraysDivByK(int[] nums, int k) {
        int[] remArr = new int[k];
        int sum = 0;
        int ans = 0;
        int rem = 0;
        remArr[0] = 1;
        for(int i=0; i<nums.length; i++){
            sum+=nums[i];
            rem = (sum%k+k)%k;
            if(remArr[rem] > 0){
                ans+=remArr[rem];
            }
            remArr[rem]++;
        }
        return ans;
    }
}
++

